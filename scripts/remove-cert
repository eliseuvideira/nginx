#!/usr/bin/env bash

script_name="$0"
script_dir="$(realpath "$(dirname "$0")")"

root_dir="$(realpath "$script_dir/..")"

compose_filename="$root_dir/docker-compose.yml"
nginx_dir="$root_dir/nginx"
nginx_domains_dir="$root_dir/nginx/domains"
certbot_dir="$root_dir/certbot"

usage() {
  cat <<__EOF__
Usage: 
  $script_name DOMAIN

Where:
  DOMAIN   domain to create certificate       subdomain.domain.com

Example:
  $script_name subdomain.domain.com
__EOF__
}

exit_with_error() {
  cat <<__EOF__
Error:
  $1
__EOF__
  echo
  usage
  exit 1
}

if [ "$#" != "1" ]; then
  exit_with_error "Invalid number of parameters"
fi

domain="$1"

regex_domain="^([a-z0-9-]{1,63}\.)+[a-z]{2,63}$"

if [[ ! "$domain" =~ $regex_domain ]]; then
  exit_with_error "Invalid domain $domain"
fi

domain_config_filename="$nginx_domains_dir/$domain.conf"
renewal_filename="$certbot_dir/conf/renewal/$domain.conf"
live_folder="$certbot_dir/conf/live/$domain"
archive_folder="$certbot_dir/conf/archive/$domain"

sudo rm -rIv --preserve-root "$domain_config_filename" "$renewal_filename" "$live_folder" "$archive_folder"

docker-compose -f "$compose_filename" exec nginx nginx -t

if [ "$?" != "0" ]; then
  exit 1
fi

docker-compose -f "$compose_filename" exec nginx nginx -s reload

sudo chown "$USER:$USER" -R "$nginx_dir"
sudo chown "$USER:$USER" -R "$certbot_dir"
