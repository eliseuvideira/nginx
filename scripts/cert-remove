#!/usr/bin/env bash

set -e
set -u

script_name="$(basename "${0}")"
script_dir="$(realpath "$(dirname "${0}")")"
script_usage="${script_name} DOMAIN"

usage() {
  echo "${script_name}: usage: ${script_usage}" >&2
}

exit_with_error() {
  echo "${script_name}: error: ${1}" >&2
  usage
  exit 1
}

recieved_arguments="${#}"
expected_arguments="1"

if [ "${recieved_arguments}" != "${expected_arguments}" ]; then
  exit_with_error "invalid number of arguments, expected \"${expected_arguments}\", recieved \"${recieved_arguments}\""
fi

domain="${1}"

if ! "${script_dir}/validate-domain" "${domain}"; then
  exit_with_error "not a valid domain '${domain}'"
fi

nginx_dir="${script_dir}/../nginx"
nginx_domains_dir="${script_dir}/../nginx/domains"
nginx_domain_filename="${nginx_domains_dir}/${domain}.conf"
certbot_dir="${script_dir}/../certbot"
renewal_filename="${certbot_dir}/conf/renewal/${domain}.conf"
live_folder="${certbot_dir}/conf/live/${domain}"
archive_folder="${certbot_dir}/conf/archive/${domain}"

remove() {
  sudo rm -rfv "${1}"
}

nginx_reload() {
  "${script_dir}/nginx-reload"
}

remove "${nginx_domain_filename}"

remove "${renewal_filename}"

remove "${live_folder}"

remove "${archive_folder}"

nginx_reload

change_owner() {
  sudo chown "${USER}:${USER}" -R "${1}"
}

change_owner "${nginx_dir}"

change_owner "${certbot_dir}"
